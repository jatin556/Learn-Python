#OOPR-Assgn-22


class Multiplex:


    __list_movie_name=["movie1","movie2"]


    __list_total_tickets=[90,50]


    __list_last_seat_number=[None,None]


    __list_ticket_price=[150,200]


    def __init__(self):


        self.__seat_numbers=None


        self.__total_price=None


    def calculate_ticket_price(self,movie_index,number_of_tickets):


        self.__total_price= Multiplex.__list_ticket_price[movie_index]*number_of_tickets


    def check_seat_availability(self,movie_index,number_of_tickets):


        if(Multiplex.__list_total_tickets[movie_index]<number_of_tickets):


            return False


        else:


            return True


    def get_total_price(self):


        return self.__total_price


    def get_seat_numbers(self):


        return self.__seat_numbers


    def book_ticket(self, movie_name, number_of_tickets):


        '''Write the logic to book the given number of tickets for the specified movie.'''


        if(movie_name==Multiplex.__list_movie_name[0]):


            if(number_of_tickets>Multiplex.__list_total_tickets[0]):


                return -1


            else:


                self.__seat_numbers=self.generate_seat_number(0, number_of_tickets)


                self.__total_price=number_of_tickets*Multiplex.__list_ticket_price[0]


                


        elif(movie_name==Multiplex.__list_movie_name[1]):


            if(number_of_tickets>Multiplex.__list_total_tickets[1]):


                return -1


            else:


                self.__seat_numbers=self.generate_seat_number(1, number_of_tickets)


                self.__total_price=number_of_tickets*Multiplex.__list_ticket_price[1]


                


        else:


            return 0


        


        


        


        


    def  generate_seat_number(self,movie_index, number_of_tickets):


        '''Write the logic to generate and return the list of seat numbers'''


        seat_list=[]


        counter_m_1=0


        counter_m_2=0


        if(Multiplex.__list_movie_name[movie_index]==Multiplex.__list_movie_name[0]):


            if(Multiplex.__list_last_seat_number[0]!=None):


                last_seat_number=Multiplex.__list_last_seat_number[0].split(sep="-")


                counter_m_1=int(last_seat_number[1])


            for i in range (0, number_of_tickets):


                counter_m_1+=1  


                temp_string="M1-"+str(counter_m_1)


                seat_list.append(temp_string)


                Multiplex.__list_last_seat_number[0]=temp_string


            Multiplex.__list_total_tickets[0]-=number_of_tickets


            


                


        if(Multiplex.__list_movie_name[movie_index]==Multiplex.__list_movie_name[1]):


            if(Multiplex.__list_last_seat_number[1]!=None):


                last_seat_number=Multiplex.__list_last_seat_number[1].split(sep="-")


                counter_m_1=int(last_seat_number[1])


            for i in range (0, number_of_tickets):


                counter_m_2+=1  


                temp_string="M2-"+str(counter_m_2)


                seat_list.append(temp_string)


                Multiplex.__list_last_seat_number[1]=temp_string


            Multiplex.__list_total_tickets[1]-=number_of_tickets


        


        return seat_list


        


        


booking1=Multiplex()


status=booking1.book_ticket("movie1",6)


if(status==0):


    print("invalid movie name")


elif(status==-1):


    print("Tickets not available for movie-1")


else:


    print("Booking successful")


    print("Seat Numbers :", booking1.get_seat_numbers())


    print("Total amount to be paid:", booking1.get_total_price())


print("-----------------------------------------------------------------------------")


booking2=Multiplex()


status=booking2.book_ticket("movie2",6)


if(status==0):


    print("invalid movie name")


elif(status==-1):


    print("Tickets not available for movie-2")


else:


    print("Booking successful")


    print("Seat Numbers :", booking2.get_seat_numbers())


    print("Total amount to be paid:", booking2.get_total_price())
